version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant_app
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs:/var/log/nginx
      - /var/log/supervisor:/var/log/supervisor
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_NAME=restaurantdb
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - db
      - loki

  db:
    image: mysql:5.7
    container_name: restaurant_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: restaurantdb
      MYSQL_USER: restaurant_user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  grafana:
    image: grafana/grafana:latest
    container_name: restaurant_grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    container_name: restaurant_loki
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/var/lib/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: restaurant_promtail
    restart: always
    volumes:
      - ./logs:/var/log/nginx
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock  # Tambahkan ini untuk akses log container
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

volumes:
  db_data:
  grafana_data:
  loki_data: